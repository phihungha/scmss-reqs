@startuml classes
left to right direction

enum Gender {
    Male
    Female
    Other
}

enum UserRole {
    Admin
    Director
    ProcurementManager
    ProcurementSpecialist
    ProductionManager
    ProductionSpecialist
    SalesManager
    SalesSpecialist
    InventoryManager
    InventorySpecialist
}

class User {
    id: str
    userName: str
    name: str
    gender: Gender
    email: str
    phoneNumber: str
    description: str
    role: UserRole
    createdPurchaseOrders: PurchaseOrder[]
    createdPurchaseRequisitions: PurchaseRequisition[]
    approvedPurchaseRequisitions: PurchaseRequisition[]
    createdSalesOrders: SalesOrder[]
    createdProductionOrders: ProductionOrder[]
    approvedProductionOrders: ProductionOrder[]
}

abstract Company {
    id: str
    name: str
    address: str
    description: str
    email: str
    phoneNumber: str
}

class Vendor {
    supplies: Supply[]
    purchaseOrders: PurchaseOrder[]
    purchaseRequisition: PurchaseRequisition[]

}
Company <|-- Vendor

class Retailer {
    products: Product[]
    salesOrders: SalesOrder[]
}
Company <|-- Retailer

class Warehouse {
    id: str
    name: str
    description: str
}

abstract Goods {
    id: str
    name: str
    description: str
    price: money
}

class Supply {
    purchaseOrderItems: PurchaseOrderItem[]
    purchaseRequisitionItems: PurchaseRequisitionItem[]
}
Goods <|-- Supply
Vendor "0..*" o-- "1..1" Supply

class Product {
    productionCost: money
    productionOrders: ProductionOrder[]
    salesOrders: SalesOrder[]
}
Goods <|-- Product

enum OrderStatus {
    Processing
    Delivering
    Delivered
    Canceled
    Returned
}

abstract Order {
    id: int
    subTotal: money
    taxAmount: money
    totalAmount: money
    creationTime: datetime
    finishTime: datetime
    createUser: User
    finishUser: User?
}
User "1..1" o-- "0..*" Order : Create
User "1..1" o-- "0..*" Order : Finish

abstract OrderItem {
    quantity: int
    unitPrice: money
    totalPrice: money
}

class OrderStatusUpdate {
    id: int
    status: OrderStatus
    note: str
    Order: order
}
Order "1..1" *-- "1..n" OrderStatusUpdate

class PurchaseRequisition {
    items: PurchaseRequisitionItem[]
    approveProductionManager: User?
    approveFinance: User?
    order: PurchaseOrder?
}
Order <|-- PurchaseRequisition
Vendor "1..1" o-- "0..*" PurchaseRequisition
User "0..*" o-- "1..1" PurchaseRequisition : Approve

class PurchaseRequisitionItem {
    requisitionId: int
    requisition: Requisition
    supplyId: int
    supply: Supply
}
OrderItem <|-- PurchaseRequisitionItem
PurchaseRequisition "1..1" *-- "1..*" PurchaseRequisitionItem
Supply "1..1" o-- "0..*" PurchaseRequisitionItem

class PurchaseOrder {
    items: PurchaseOrderItem[]
    requisition: PurchaseRequisition
}
Order <|-- PurchaseOrder
Vendor "1..1" o-- "0..*" PurchaseOrder
PurchaseOrder "0..1" --> "1..1" PurchaseRequisition

class PurchaseOrderItem {
    orderId: int
    order: Requisition
    supplyId: int
    supply: Supply
}
OrderItem <|-- PurchaseOrderItem
PurchaseOrder "1..1" *-- "1..*" PurchaseOrderItem
Supply "1..1" o-- "0..*" PurchaseOrderItem

class SalesOrder {
    items: SalesOrderItem[]
}
Order <|-- SalesOrder
Retailer "1..1" o-- "0..*" SalesOrder

class SalesOrderItem {
    orderId: int
    order: SalesOrder
    productId: int
    product: Product
}
OrderItem <|-- SalesOrderItem
SalesOrder "1..1" *-- "1..*" SalesOrderItem
Product "1..1" o-- "0..*" SalesOrderItem

class ProductionOrder {
    items: ProductionOrderItem[]
    approveProductionManager: User?
}
Order <|-- ProductionOrder
User "0..*" o-- "1..1" ProductionOrder : Approve

class ProductionOrderItem {
    orderId: int
    order: ProductionOrder
    productId: int
    product: Product
}
OrderItem <|-- ProductionOrderItem
ProductionOrder "1..1" *-- "1..*" ProductionOrderItem
Product "1..1" o-- "0..*" ProductionOrderItem

abstract WarehouseItem {
    id: int
    description: str
    warehouseId: int
    Warehouse: Warehouse
    quantity: double
}
Warehouse "1..1" *-- "0..*" WarehouseItem

class WarehouseSupplyItem {
    supplyId: int
    supply: Supply
}
WarehouseItem <|-- WarehouseSupplyItem
Supply "1..1" o-- "0..*" WarehouseSupplyItem

class WarehouseProductItem {
    productId: int
    Product: Product
}
WarehouseItem <|-- WarehouseProductItem
Product "1..1" o-- "0..*" WarehouseProductItem
@enduml