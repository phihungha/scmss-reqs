@startuml classes
left to right direction

enum Gender {
    Male
    Female
    Other
}

enum UserRole {
    Admin
    Director
    ProcurementManager
    ProcurementSpecialist
    ProductionManager
    ProductionSpecialist
    SalesManager
    SalesSpecialist
    InventoryManager
    InventorySpecialist
}

class User {
    id: str
    userName: str
    name: str
    gender: Gender
    email: str
    phoneNumber: str
    description: str
    role: UserRole
    createdPurchaseOrders: PurchaseOrder[]
    createdPurchaseRequisitions: PurchaseRequisition[]
    approvedPurchaseRequisitions: PurchaseRequisition[]
    createdSalesOrders: SalesOrder[]
    createdProductionOrders: ProductionOrder[]
    approvedProductionOrders: ProductionOrder[]
}

class Notification {
    id: int
    createTime: datetime
    hasRead: bool
    content: str
}
User "1..1" *-- "0..*" Notification

abstract Company {
    id: str
    name: str
    location: str
    description: str
    email: str
    phoneNumber: str
    contactPerson: str
}

class Vendor {
    supplies: Supply[]
    purchaseOrders: PurchaseOrder[]
    purchaseRequisitions: PurchaseRequisition[]

}
Company <|-- Vendor

class Retailer {
    products: Product[]
    salesOrders: SalesOrder[]
}
Company <|-- Retailer

abstract Goods {
    id: int
    name: str
    description: str
    unit: str
    price: money
}

class Supply {
    purchaseOrderItems: PurchaseOrderItem[]
    purchaseRequisitionItems: PurchaseRequisitionItem[]
}
Goods <|-- Supply
Vendor "0..*" o-- "1..1" Supply


class Product {
    productionCostItems: ProductionCostItem[]
    productionCost: money
    productionOrders: ProductionOrder[]
    salesOrders: SalesOrder[]
}
Goods <|-- Product

class ProductionCostItem {
    productId: int
    product: Product
    supplyId: int
    supply: Supply
    quantity: double
    unitCost: money
    totalCost: money
}
Product "1..1" *-- "0..*" ProductionCostItem
Supply "1..1" o-- "0..*" ProductionCostItem

enum OrderStatus {
    Processing
    Delivering
    Interrupted
    Delivered
    Canceled
    Returned
}

enum OrderPaymentStatus {
    Pending
    Due
    Completed
}

abstract Order {
    id: int
    subTotal: money
    taxRate: double
    taxAmount: money
    totalAmount: money
    status: OrderStatus
    paymentStatus: OrderPaymentStatus
    invoice: url?
    receipt: url?
    createTime: datetime
    finishTime: datetime
    creatingUser: User
    finishingUser: User?
}
User "1..1" o-- "0..*" Order : Create
User "1..1" o-- "0..*" Order : Finish

abstract OrderItem {
    quantity: double
    unit: str
    unitPrice: money
    totalPrice: money
}

enum OrderProgressUpdateType {
    Processing
    Leave
    Arrive
    PaymentDue
    Delivered
    PaymentCompleted
    Canceled
    Returned
    Interrupted
}

class OrderProgressUpdate {
    id: int
    type: OrderProgressUpdateType
    time: datetime
    location: str
    note: str?
    Order: order
}
Order "1..1" *-- "1..*" OrderProgressUpdate

enum PurchaseRequisitionStatus {
    PendingApproval
    Approved
    Purchasing
    Completed
    Canceled
}

class PurchaseRequisition {
    id: int
    subTotal: money
    taxRate: double
    taxAmount: money
    totalAmount: money
    items: PurchaseRequisitionItem[]
    status: PurchaseRequisitionStatus
    createTime: datetime
    finishTime: datetime
    creatingUser: User
    approvingProductionManager: User?
    approvingFinance: User?
    order: PurchaseOrder?
}
Vendor "1..1" o-- "0..*" PurchaseRequisition
User "0..*" o-- "1..1" PurchaseRequisition : Approve

class PurchaseRequisitionItem {
    supplyId: int
    supply: Supply
    requisitionId: int
    requisition: Requisition
}
OrderItem <|-- PurchaseRequisitionItem
PurchaseRequisition "1..1" *-- "1..*" PurchaseRequisitionItem
Supply "1..1" o-- "0..*" PurchaseRequisitionItem

class PurchaseOrder {
    items: PurchaseOrderItem[]
    discountAmount: money
    requisition: PurchaseRequisition
}
Order <|-- PurchaseOrder
Vendor "1..1" o-- "0..*" PurchaseOrder
PurchaseRequisition "1..1" o-- "0..1" PurchaseOrder

class PurchaseOrderItem {
    supplyId: int
    supply: Supply
    orderId: int
    order: PurchaseOrder
    discount: money
    netPrice: money
}
OrderItem <|-- PurchaseOrderItem
PurchaseOrder "1..1" *-- "1..*" PurchaseOrderItem
Supply "1..1" o-- "0..*" PurchaseOrderItem

class SalesOrder {
    items: SalesOrderItem[]
}
Order <|-- SalesOrder
Retailer "1..1" o-- "0..*" SalesOrder

class SalesOrderItem {
    orderId: int
    order: SalesOrder
    productId: int
    product: Product
}
OrderItem <|-- SalesOrderItem
SalesOrder "1..1" *-- "1..*" SalesOrderItem
Product "1..1" o-- "0..*" SalesOrderItem

enum ProductionOrderStatus {
    PendingApproval
    Approved
    Started
    Completed
}

class ProductionOrder {
    id: int
    productItems: ProductionOrderItem[]
    totalValue: money
    totalCost: money
    profit: money
    status: ProductionOrderStatus
    createTime: datetime
    finishTime: datetime
    creatingUser: User
    finishingUser: User?
    approvingProductionManager: User?
}
User "0..*" o-- "1..1" ProductionOrder : Approve

class ProductionOrderItem {
    orderId: int
    order: ProductionOrder
    productId: int
    product: Product
    quantity: double
    unit: str
    unitPrice: money
    totalValue: money
    totalCost: money
}
ProductionOrder "1..1" *-- "1..*" ProductionOrderItem
Product "1..1" o-- "0..*" ProductionOrderItem

abstract InventoryItem {
    quantity: double
    unit: str
    unitPrice: money
    totalPrice: money
    note: str
}

class Warehouse {
    id: str
    name: str
    description: str
    supplyItems: SupplyItem[]
    productItems: ProductItem[]
    issues: WarehouseIssue[]
    receipts: WarehouseReceipt[]
}

abstract WarehouseItem {
    warehouseId: int
    Warehouse: Warehouse
}
InventoryItem <|-- WarehouseItem

class WarehouseSupplyItem {
    supplyId: int
    supply: Supply
}
WarehouseItem <|-- WarehouseSupplyItem
Warehouse "1..1" *-- "0..*" WarehouseSupplyItem
Supply "1..1" o-- "0..*" WarehouseSupplyItem

class WarehouseProductItem {
    productId: int
    Product: Product
}
WarehouseItem <|-- WarehouseProductItem
Warehouse "1..1" *-- "0..*" WarehouseProductItem
Product "1..1" o-- "0..*" WarehouseProductItem

abstract WarehouseForm {
    int: id
    warehouseId: int
    warehouse: Warehouse
    createTime: datetime
    totalValue: money
}

abstract WarehouseFormItem
InventoryItem <|-- WarehouseFormItem

class WarehouseIssue {
    salesOrderId: int
    salesOrder: SalesOrder
    items: WarehouseFormItem[]
}
WarehouseForm <|-- WarehouseIssue
SalesOrder "1..1" o-- "1..1" WarehouseIssue
Warehouse "1..1" o-- "0..*" WarehouseIssue

class WarehouseIssueItem {
    issueId: int
    issue: WarehouseIssue
    productId: int
    product: Product
}
WarehouseFormItem <|-- WarehouseIssueItem
WarehouseIssue "1..1" *-- "1..*" WarehouseIssueItem
Product "1..1" o-- "0..*" WarehouseIssueItem

class WarehouseReceipt {
    purchaseOrderId: int
    purchaseOrder: PurchaseOrder
    items: WarehouseFormItem[]
}
WarehouseForm <|-- WarehouseReceipt
PurchaseOrder "1..1" o-- "1..1" WarehouseReceipt
Warehouse "1..1" o-- "0..*" WarehouseReceipt

class WarehouseReceiptItem {
    receiptId: int
    receipt: WarehouseReceipt
    supplyId: int
    supply: Supply
}
WarehouseFormItem <|-- WarehouseReceiptItem
WarehouseReceipt "1..1" *-- "1..*" WarehouseReceiptItem
Supply "1..1" o-- "0..*" WarehouseReceiptItem
@enduml